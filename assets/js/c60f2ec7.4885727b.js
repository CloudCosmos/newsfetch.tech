"use strict";(self.webpackChunknewsfetch_website=self.webpackChunknewsfetch_website||[]).push([[9826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5829:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:56},o="Enriched News",s={unversionedId:"features/enriched-news",id:"features/enriched-news",title:"Enriched News",description:"NewsFetch provides libraries that can enrich the News data. One or more enrichments can be applied on processed content",source:"@site/docs/features/enriched-news.md",sourceDirName:"features",slug:"/features/enriched-news",permalink:"/docs/features/enriched-news",draft:!1,tags:[],version:"current",sidebarPosition:56,frontMatter:{sidebar_position:56},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/docs/features/api"},next:{title:"NewsFetch - Ideas and Possibilities",permalink:"/docs/features/ideas-and-possibilities"}},c={},l=[{value:"Named Entity Recognition",id:"named-entity-recognition",level:2},{value:"Open Source Models",id:"open-source-models",level:3},{value:"Cloud Provider Models",id:"cloud-provider-models",level:3},{value:"Summarization",id:"summarization",level:2},{value:"Topic Modelling",id:"topic-modelling",level:2},{value:"Question Answering",id:"question-answering",level:2},{value:"Generative Question Answering",id:"generative-question-answering",level:2},{value:"Classification",id:"classification",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"enriched-news"},"Enriched News"),(0,r.kt)("p",null,"NewsFetch provides libraries that can enrich the News data. One or more enrichments can be applied on processed content\nfrom the article. The various enrichments that are available are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Named Entity Recognition"),(0,r.kt)("li",{parentName:"ul"},"Summarization (Abstractive at this time)"),(0,r.kt)("li",{parentName:"ul"},"Topic Modelling"),(0,r.kt)("li",{parentName:"ul"},"Question Answering"),(0,r.kt)("li",{parentName:"ul"},"Generative Question Answering"),(0,r.kt)("li",{parentName:"ul"},"Classification")),(0,r.kt)("h2",{id:"named-entity-recognition"},"Named Entity Recognition"),(0,r.kt)("p",null,"Named Entity Recognition (NER) is the process of identifying named entities in text and classifying them into pre-defined\ncategories such as the names of persons, organizations, locations, expressions of times, quantities, monetary values,\npercentages, etc."),(0,r.kt)("h3",{id:"open-source-models"},"Open Source Models"),(0,r.kt)("p",null,"The NER processes wraps popular open-source NER libraries/models such as ",(0,r.kt)("a",{parentName:"p",href:"https://spacy.io/usage/linguistic-features#named-entities"},"spaCy"),",\nand ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=ner"},"HuggingFace")," to provide a standardized interface to the NER process. Support\nis provided for AllenNLP and Flair as well."),(0,r.kt)("p",null,"The NER process generates a normalized output from the results that the open-source models provide. Further, there are utilities\nthat aggregate entities from results from single model, and from multiple models. Entity composition from BILOU tagging is also available."),(0,r.kt)("h3",{id:"cloud-provider-models"},"Cloud Provider Models"),(0,r.kt)("p",null,"Various cloud providers provide NER models as a service. NewsFetch provides a wrapper for the AWS Comprehend NER service,\nAzure Text Analytics NER service, and Google Cloud Natural Language NER service. The output from these services is normalized\nto the NewsFetch NER output format. These services are paid services, and the user is expected to have an account with the\ncloud provider, and have the necessary credentials to access the service."),(0,r.kt)("h2",{id:"summarization"},"Summarization"),(0,r.kt)("p",null,"Summarization is the process of reducing a text document with a computer program in order to create a summary that retains\nthe most important essence of the original document. A number of transformer based models that can generate a coherent\nsummary of the input text, taking into account variables such as length, writing style and syntax. "),(0,r.kt)("p",null,"Summarization can be either extractive or abstractive. Extractive summarization identifies the most important sentences\nin the text and reorders them to form the summary. Abstractive summarization generates new phrases and sentences to\nform the summary."),(0,r.kt)("p",null,"NewsFetch provides a standardized interface to summarization models from ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=summarization"},"HuggingFace"),"."),(0,r.kt)("h2",{id:"topic-modelling"},"Topic Modelling"),(0,r.kt)("p",null,"Topic modelling is the process of identifying topics in a text document. The topics are identified by the words that are\nmost relevant to the topic. "),(0,r.kt)("p",null,"NewsFetch provides a standardized interface to topic-modelling models from ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=topic-modeling"},"HuggingFace"),"."),(0,r.kt)("h2",{id:"question-answering"},"Question Answering"),(0,r.kt)("p",null,"Question Answering is the process of answering a question based on the context of the text. The context can be a paragraph,\nor a document. The answer can be a sentence, or a span of text."),(0,r.kt)("p",null,"NewsFetch provides a standardized interface to question answering models from ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=question-answering"},"HuggingFace"),"."),(0,r.kt)("h2",{id:"generative-question-answering"},"Generative Question Answering"),(0,r.kt)("p",null,"Generative Question Answering is the process of generating a question based on the context of the text. The context can be a paragraph,\nor a document. The question can be a sentence, or a span of text."),(0,r.kt)("p",null,"NewsFetch provides a standardized interface to generative question answering models from ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=question-generation"},"HuggingFace"),"."),(0,r.kt)("h2",{id:"classification"},"Classification"),(0,r.kt)("p",null,"Classification is the process of assigning a label to a text document. The label can be a category, or a tag. The text\ndocument can be a paragraph, or a document. Further the label can be a single label, or multiple labels."),(0,r.kt)("p",null,"NewsFetch provides a standardized interface to classification models from ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?pipeline_tag=text-classification"},"HuggingFace"),"."),(0,r.kt)("h1",{id:"enrichment-processing"},"Enrichment Processing"),(0,r.kt)("p",null,"A sample script that shows how to generate enrichments for News data is available in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NewsFetch/NewsFetch/blob/main/newsfetch-enrichers/run_enrichers.py"},"NewsFetch Enrichments repository"),". We also have a new Docker image that can be used to run the enrichment process."))}u.isMDXComponent=!0}}]);