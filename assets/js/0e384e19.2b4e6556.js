"use strict";(self.webpackChunknewsfetch_website=self.webpackChunknewsfetch_website||[]).push([[9671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},l="Introduction",i={unversionedId:"intro",id:"intro",title:"Introduction",description:"NewsFetch",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Features",permalink:"/docs/features/"}},s={},c=[{value:"NewsFetch",id:"newsfetch",level:2},{value:"Source code",id:"source-code",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("h2",{id:"newsfetch"},"NewsFetch"),(0,a.kt)("admonition",{title:"News Data",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Processed, Structured, and Ready to Use")),(0,a.kt)("p",null,"Billions of articles, tens of thousands of world-wide sources, multiple languages!!"),(0,a.kt)("h2",{id:"source-code"},"Source code"),(0,a.kt)("p",null,"NewsFetch has been developed with Python. To get started, you will need to have Python 3.9 or higher installed on your system.\nPython can be downloaded from ",(0,a.kt)("a",{parentName:"p",href:"https://www.python.org/downloads/"},"here"),"."),(0,a.kt)("p",null,"Pyenv is a tool that can be used to manage multiple versions of Python on the same system.\nIt can be installed using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://pyenv.run | bash\n")),(0,a.kt)("p",null,"Once installed you can install Python 3.9 using the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pyenv install 3.9\n")),(0,a.kt)("h3",{id:"project-structure"},"Project Structure"),(0,a.kt)("p",null,"NewsFetch has various subprojects, and others are being implemented and will be added.\nAll subprojects will be based on Python and will follow the same structure. The general installation instructions for each subproject will be same.\nAny specific instructions for a subproject will be mentioned in the respective subproject's documentation."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NewsFetch/NewsFetch/tree/main/newsfetch-core"},"NewsFetch Core")," - Core library for NewsFetch"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NewsFetch/NewsFetch/tree/main/newsfetch-common-crawl"},"NewsFetch Common Crawl")," - Common Crawl related tools"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NewsFetch/NewsFetch/tree/main/newsfetch-api"},"NewsFetch Api")," - Example API based on FastAPI"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NewsFetch/NewsFetch/tree/main/sample-data"},"Sample Data")," - Sample data")),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,"All NewsFetch subprojects use Poetry for managing dependencies."),(0,a.kt)("p",null,"To get started, first navigate to the submodule directory. Now create a virtual environment and activate it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"python -m venv venv\nsource venv/bin/activate\n")),(0,a.kt)("p",null,"Then, install Poetry."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install poetry\n")),(0,a.kt)("p",null,"Now, install the dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"poetry install\n")),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("p",null,"In cases where there is a ",(0,a.kt)("inlineCode",{parentName:"p"},".env.sample")," file, make a copy of it to a file named ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," add/updated the required values.\nThese values will be used in configuration, and is loaded from the ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file in corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"config.py")," file."))}u.isMDXComponent=!0}}]);